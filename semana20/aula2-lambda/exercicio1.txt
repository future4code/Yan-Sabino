### Exercício 1:

Leia atentamente a função abaixo e responda todas as perguntas em um arquivo chamado `exercicio1.txt`:

exports.handler = async event => {
      if (!event.user || !event.user.info) {
        return {
          statusCode: 400,
          body: JSON.stringify({ message: "Missing input" })
        };
      }
      const user = {
        name: event.user.info.name,
        email: event.user.info.email,
        password: event.user.info.password
      };
    
      if (!user.name) {
        return {
          statusCode: 400,
          body: JSON.stringify({ message: "Missing name" })
        };
      }
      if (!user.email) {
        return {
          statusCode: 400,
          body: JSON.stringify({ message: "Missing email" })
        };
      }
      if (!user.password || user.password.length < 6) {
        return {
          statusCode: 400,
          body: JSON.stringify({ message: "Invalid password" })
        };
      }
    
      return {
        statusCode: 200,
        body: JSON.stringify({
          message: "User is correct"
        })
      };
    };

a. Há alguma coisa que você não entendeu nesse código? Se tiver, converse com colegas ou crie um atendimento para esclarecimentos.
b. Qual o retorno da função se ela receber um objeto vazio de entrada?
    O retorno da função se houver um objeto vazio na entrada será:

    return {
      statusCode: 400,
      body: JSON.stringify({ message: "Missing input" })
    }

c.  Qual o retorno da função se ela receber este objeto como entrada:

    {
	"user": {
		"name": "Astrodev"
	}
    }

    O retorno da função será:

    return {
      statusCode: 400,
      body: JSON.stringify({ message: "Missing input" })
    }

d. Qual o retorno da função se ela receber este objeto como entrada:

    {
    "user": {
            "info": {
                "name": "Astrodev"
            }
    }
    }
    
    Retorno

   {
  "statusCode": 400,
  "body": "{\"message\":\"Missing email\"}"
}

e. Qual o retorno da função se ela receber este objeto como entrada:

    {
    "user": {
                "info": {
                    "name": "Astrodev",
                    "email": "astrodev@f4.com.br",
                    "password": "12345"
                }
            }
    }

    Retorno

    return {
      statusCode: 400,
      body: JSON.stringify({ message: "Invalid password" })
    };

f. Qual o retorno da função se ela receber este objeto como entrada:
    {
  "user": {
		"info": {
			"name": "Astrodev",
			"email": "astrodev@f4.com.br",
			"password": "123456"
		    }
        }
    }

    Retorno 

        return {
        statusCode: 200,
        body: JSON.stringify({
        message: "User is correct"
        })
        };


g. Onde devemos alterar para que a função retorne o status 422 caso o email seja inválido?

  if(user.email.indexOf('@') === -1){
     return{
      statusCode: 422,
      body: JSON.stringify({message: "Missing @"})
         
     }
  }  

h. Qual deve ser o objeto de entrada para que a função retorne o status 200?

   {
  "user": {
		"info": {
			"name": "Astrodev",
			"email": "astrodev@f4.com.br",
			"password": "123456"
		}
  }
} 



